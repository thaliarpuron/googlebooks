{"version":3,"sources":["components/Nav/index.js","utils/API.js","components/Grid/index.js","components/Thumbnail/index.js","components/SaveBtn/index.js","components/DeleteBtn/index.js","components/List/index.js","components/Input/index.js","pages/Search.js","pages/Saved.js","components/Jumbotron/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","className","to","window","location","pathname","query","axios","get","bookData","post","id","delete","Container","fluid","children","Row","Col","size","split","map","join","Thumbnail","src","role","aria-label","style","backgroundImage","SaveBtn","type","onClick","useState","show","setShow","handleClose","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","DeleteBtn","BookList","BookListItem","props","image","title","authors","flat","description","rel","target","href","link","event","API","then","res","loadBooks","console","log","catch","err","Input","SearchButton","Search","state","books","bookSearch","handleInputChange","name","value","setState","handleFormSubmit","preventDefault","data","items","this","onChange","placeholder","book","volumeInfo","infoLink","undefined","imageLinks","thumbnail","Component","Save","savedBooks","_id","Jumbotron","App","exact","path","component","Saved","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.eaa1f7a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <ul className=\"nav nav-tabs\">\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/\" className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\r\n                    Google Books\r\n            </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    to=\"/search\"\r\n                    className={window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}\r\n                >\r\n                    Search\r\n            </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    to=\"/saved\"\r\n                    className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\r\n                >\r\n                    Saved\r\n            </Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Nav;","import axios from \"axios\";\r\n// endpoint from googlebooks api\r\nconst BaseUrl = \"https://www.googleapis.com/books/v1/volumes?q=\"\r\n\r\nexport default {\r\n    // calls googlbooks api and retrieve books based on user input\r\n    searchBooks: (query) => axios.get(BaseUrl + query),\r\n    // get all books saved in db\r\n    getBooks: () => axios.get(\"https://radiant-caverns-09253.herokuapp.com/api/books\"),\r\n    // saves a book to the db\r\n    saveBook: (bookData) => axios.post(\"https://radiant-caverns-09253.herokuapp.com/api/books\", bookData),\r\n    // deletes a book with the given id\r\n    deleteBook: (id) => axios.delete(\"https://radiant-caverns-09253.herokuapp.com/api/books/\" + id)\r\n};","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n    return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n    return (\r\n        <div\r\n            className={size\r\n                .split(\" \")\r\n                .map(size => \"col-\" + size)\r\n                .join(\" \")}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// The Thumbnail component renders a div that uses some CSS to render a background image\r\n// It will always keep square proportions at any size without the image warping\r\n// The \"role\" and \"aria label\" are there to identify the element's purpose as an image for accessibility purposes\r\nfunction Thumbnail({ src }) {\r\n    return (\r\n        <div\r\n            className=\"thumbnail\"\r\n            role=\"img\"\r\n            aria-label=\"Book Image\"\r\n            style={{\r\n                backgroundImage: `url(${src})`\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Thumbnail;\r\n","// need useState to maintain state in functional component\r\nimport React, { useState } from \"react\";\r\n// used for saving book modal\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\n// Using React Hooks here to maintain state in a functional component\r\n// Destructuring the type, className, children and onClick props, applying them to the button element\r\nfunction SaveBtn({ type = \"default\", className, children, onClick }) {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    // handles closing of modal\r\n    const handleClose = () => setShow(false);\r\n    // handles showing of modal\r\n    const handleShow = () => setShow(true);\r\n\r\n    // saves book to db and shows modal\r\n    const click = () => {\r\n        handleShow()\r\n        onClick()\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button onClick={click} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\r\n                {children}\r\n            </button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Your book has been saved!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>You can view your saved books in the Saved tab!</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n            </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        OK\r\n            </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SaveBtn;\r\n","import React from \"react\";\r\n\r\n// Destructuring the type, className, children and onClick props, applying them to the button element\r\nfunction DeleteBtn({ type = \"default\", className, children, onClick }) {\r\n    return (\r\n        <button onClick={onClick} className={[\"btn btn-lg\", `btn-${type}`, className].join(\" \")}>\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default DeleteBtn;","import React from \"react\";\r\nimport Thumbnail from \"../Thumbnail\";\r\nimport { Container, Row, Col } from \"../Grid\";\r\nimport SaveBtn from \"../SaveBtn\";\r\nimport API from \"../../utils/API\";\r\nimport DeleteBtn from \"../DeleteBtn\"\r\nimport \"./style.css\"\r\n\r\n// BookList renders a bootstrap list item\r\nexport function BookList({ children }) {\r\n    return <ul className=\"list-group\">{children}</ul>;\r\n};\r\n\r\n// component to render each book\r\nexport function BookListItem(props) {\r\n\r\n    // function to handle saving book to db when save button is clicked\r\n    const handleSaveBtn = event => {\r\n\r\n        API.saveBook({\r\n            title: props.title,\r\n            authors: props.authors,\r\n            description: props.description,\r\n            image: props.image,\r\n            link: props.link\r\n        }).then(\r\n            res => console.log(res)\r\n        )\r\n            .catch(\r\n                err => console.log(err)\r\n            )\r\n    };\r\n\r\n    // function to handle deleting book from db when delete button is clicked\r\n    const handleDeleteBtn = event => {\r\n        API.deleteBook(props.id)\r\n            .then(\r\n                res => {\r\n                    // use loadBooks prop from Saved page component\r\n                    props.loadBooks()\r\n                    console.log(props.id)\r\n                }\r\n            )\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    return (\r\n        <li className=\"list-group-item\" key={props.id}>\r\n            <Container>\r\n                <Row>\r\n                    <Col size=\"xs-4 sm-2\">\r\n                        <Thumbnail src={props.image} />\r\n                    </Col>\r\n                    <Col size=\"xs-8 sm-10\">\r\n                        <h3>{props.title}</h3>\r\n                        <p>\r\n                            Written By {[props.authors].flat().join(\", \")}\r\n                        </p>\r\n                        <p>\r\n                            {props.description}\r\n                        </p>\r\n                        <a\r\n                            rel=\"noreferrer noopener\"\r\n                            className=\"btn btn-lg btn-primary input-lg view\"\r\n                            target=\"_blank\"\r\n                            href={props.link}\r\n                        >\r\n                            View\r\n                        </a>\r\n                        {/* if there is an object id render the SaveBtn component else render the DeleteBtn component */}\r\n                        {!props.id ?\r\n                            <SaveBtn\r\n                                type=\"success\"\r\n                                className=\"input-lg\"\r\n                                onClick={handleSaveBtn}\r\n                            >\r\n                                Save\r\n                            </SaveBtn>\r\n                            :\r\n                            <DeleteBtn\r\n                                type=\"danger\"\r\n                                className=\"input-lg\"\r\n                                onClick={handleDeleteBtn}\r\n                            >\r\n                                Delete\r\n                            </DeleteBtn>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </li>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\n// This component lets us use a bootstrap input element without worrying about class names\r\n// or manually wrapping the input with a form-group div\r\n// All of the props passed to this component are spread onto the input element\r\nexport function Input(props) {\r\n    return (\r\n        <div className=\"input-group input-group-lg\">\r\n            <input className=\"form-control\" type=\"text\" {...props} />\r\n        </div>\r\n    );\r\n}\r\n\r\n// Destructuring the type, className, children and onClick props, applying them to the button element\r\nexport function SearchButton({ type = \"default\", className, children, onClick }) {\r\n    return (\r\n        <button onClick={onClick} className={[\"search btn btn-lg\", `btn-${type}`, className].join(\" \")}>\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { Container, Row, Col } from \"../components/Grid\";\r\nimport { BookList, BookListItem } from \"../components/List\";\r\nimport { Input, SearchButton } from \"../components/Input\";\r\n\r\nclass Search extends Component {\r\n\r\n    // instatiate state for list of books retrieved from googlebooks api and bookSearch value\r\n    state = {\r\n        books: [],\r\n        bookSearch: \"\"\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        // Destructure the name and value properties off of event.target\r\n        // Update the appropriate state\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value })\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        // When the form is submitted, prevent its default behavior, get book update the books state\r\n        event.preventDefault();\r\n\r\n        // calls googlebooks api and returns searched book when search button is clicked\r\n        API.searchBooks(this.state.bookSearch)\r\n            .then(res => {\r\n                this.setState({ books: res.data.items }, function () {\r\n                    console.log(this.state.books);\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col size=\"md-12\">\r\n                            <form>\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col size=\"xs-12 sm-12\">\r\n                                            <Input\r\n                                                name=\"bookSearch\"\r\n                                                value={this.state.bookSearch}\r\n                                                onChange={this.handleInputChange}\r\n                                                placeholder=\"Search for a Book\"\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col size=\"xs-12 sm-12\">\r\n                                            <SearchButton\r\n                                                onClick={this.handleFormSubmit}\r\n                                                type=\"success\"\r\n                                                className=\"input-lg\"\r\n                                            >\r\n                                                Search\r\n                                            </SearchButton>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </form>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col size=\"xs-12\">\r\n                            <BookList>\r\n                                {this.state.books.map(book => {\r\n                                    return (\r\n                                        <BookListItem\r\n                                            key={book.id}\r\n                                            title={book.volumeInfo.title}\r\n                                            authors={book.volumeInfo.authors}\r\n                                            link={book.volumeInfo.infoLink}\r\n                                            description={book.volumeInfo.description}\r\n                                            // if no imageLinks then use placeholder image\r\n                                            image={book.volumeInfo.imageLinks === undefined ? \"http://siddallheatingandcooling.net/_imgstore/5/1360415/thumbnail/FSeY96wEdX_eY4XkBN2jfYnuY9A.png\" : `${book.volumeInfo.imageLinks.thumbnail}`}\r\n                                        />);\r\n                                })}\r\n                            </BookList>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    };\r\n\r\n};\r\n\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { Container, Row, Col } from \"../components/Grid\";\r\nimport { BookList, BookListItem } from \"../components/List\";\r\n\r\nclass Save extends Component {\r\n\r\n    // instantiate state for saved books\r\n    state = {\r\n        savedBooks: []\r\n    };\r\n\r\n    // loads saved books when Saved page loads\r\n    componentDidMount() {\r\n        this.loadBooks();\r\n    };\r\n\r\n    // loads books from database\r\n    loadBooks = event => {\r\n\r\n        API.getBooks()\r\n            .then(res => {\r\n                this.setState({ savedBooks: res.data }, function () {\r\n                    console.log(this.state.savedBooks);\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col size=\"xs-12\">\r\n                            <BookList>\r\n                                {this.state.savedBooks.map(book => {\r\n                                    return (\r\n                                        <BookListItem\r\n                                            key={book._id}\r\n                                            title={book.title}\r\n                                            authors={book.authors}\r\n                                            link={book.link}\r\n                                            description={book.description}\r\n                                            image={book.image}\r\n                                            id={book._id}\r\n                                            loadBooks={this.loadBooks}\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </BookList>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    };\r\n\r\n};\r\n\r\nexport default Save;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron() {\r\n    return (\r\n        <div className=\"jumbotron text-center\">\r\n            <h1>(React) Google Books Search</h1>\r\n            <h3>Search for and Save Books of Interest</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Nav from \"./components/Nav\"\r\nimport Search from \"./pages/Search\";\r\nimport Saved from \"./pages/Saved\";\r\nimport Jumbotron from \"./components/Jumbotron\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Nav />\r\n          <Jumbotron />\r\n          <Switch>\r\n            {/* renders the Search page when \"/\" route is hit */}\r\n            <Route exact path=\"/\" component={Search} />\r\n            {/* renders the Search page when \"/search\" route is hit */}\r\n            <Route exact path=\"/search\" component={Search} />\r\n            {/* renders the Saved page when \"/saved\" route is hit */}\r\n            <Route exact path=\"/saved\" component={Saved} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}